/**
 * @fileoverview gRPC-Web generated client stub for space
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
import * as grpcWeb from 'grpc-web';
import { AddItemsResponse, BackupKeysByPassphraseResponse, CreateBucketResponse, CreateFolderResponse, CreateLocalKeysBackupResponse, DeleteAccountResponse, DeleteKeyPairResponse, FileEventResponse, FileInfoEventResponse, FuseDriveResponse, GenerateKeyPairResponse, GeneratePublicFileLinkResponse, GetAPISessionTokensResponse, GetNotificationsResponse, GetPublicKeyResponse, GetRecentlySharedWithResponse, GetSharedWithMeFilesResponse, GetStoredMnemonicResponse, GetUsageInfoResponse, HandleFilesInvitationResponse, JoinBucketResponse, ListBucketsResponse, ListDirectoriesResponse, ListDirectoryResponse, NotificationEventResponse, OpenFileResponse, OpenPublicFileResponse, ReadNotificationResponse, RecoverKeysByLocalBackupResponse, RecoverKeysByPassphraseResponse, RestoreKeyPairViaMnemonicResponse, SetNotificationsLastSeenAtResponse, ShareBucketResponse, ShareFilesViaPublicKeyResponse, TestKeysPassphraseResponse, TextileEventResponse, ToggleBucketBackupResponse } from './space_pb';
var SpaceApiClient = /** @class */ (function () {
    function SpaceApiClient(hostname, credentials, options) {
        this.methodInfoListDirectories = new grpcWeb.AbstractClientBase.MethodInfo(ListDirectoriesResponse, function (request) {
            return request.serializeBinary();
        }, ListDirectoriesResponse.deserializeBinary);
        this.methodInfoListDirectory = new grpcWeb.AbstractClientBase.MethodInfo(ListDirectoryResponse, function (request) {
            return request.serializeBinary();
        }, ListDirectoryResponse.deserializeBinary);
        this.methodInfoGenerateKeyPair = new grpcWeb.AbstractClientBase.MethodInfo(GenerateKeyPairResponse, function (request) {
            return request.serializeBinary();
        }, GenerateKeyPairResponse.deserializeBinary);
        this.methodInfoGetStoredMnemonic = new grpcWeb.AbstractClientBase.MethodInfo(GetStoredMnemonicResponse, function (request) {
            return request.serializeBinary();
        }, GetStoredMnemonicResponse.deserializeBinary);
        this.methodInfoRestoreKeyPairViaMnemonic = new grpcWeb.AbstractClientBase.MethodInfo(RestoreKeyPairViaMnemonicResponse, function (request) {
            return request.serializeBinary();
        }, RestoreKeyPairViaMnemonicResponse.deserializeBinary);
        this.methodInfoDeleteKeyPair = new grpcWeb.AbstractClientBase.MethodInfo(DeleteKeyPairResponse, function (request) {
            return request.serializeBinary();
        }, DeleteKeyPairResponse.deserializeBinary);
        this.methodInfoGenerateKeyPairWithForce = new grpcWeb.AbstractClientBase.MethodInfo(GenerateKeyPairResponse, function (request) {
            return request.serializeBinary();
        }, GenerateKeyPairResponse.deserializeBinary);
        this.methodInfoGetPublicKey = new grpcWeb.AbstractClientBase.MethodInfo(GetPublicKeyResponse, function (request) {
            return request.serializeBinary();
        }, GetPublicKeyResponse.deserializeBinary);
        this.methodInfoSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(FileEventResponse, function (request) {
            return request.serializeBinary();
        }, FileEventResponse.deserializeBinary);
        this.methodInfoFileInfoSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(FileInfoEventResponse, function (request) {
            return request.serializeBinary();
        }, FileInfoEventResponse.deserializeBinary);
        this.methodInfoTxlSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(TextileEventResponse, function (request) {
            return request.serializeBinary();
        }, TextileEventResponse.deserializeBinary);
        this.methodInfoOpenFile = new grpcWeb.AbstractClientBase.MethodInfo(OpenFileResponse, function (request) {
            return request.serializeBinary();
        }, OpenFileResponse.deserializeBinary);
        this.methodInfoGeneratePublicFileLink = new grpcWeb.AbstractClientBase.MethodInfo(GeneratePublicFileLinkResponse, function (request) {
            return request.serializeBinary();
        }, GeneratePublicFileLinkResponse.deserializeBinary);
        this.methodInfoGetSharedWithMeFiles = new grpcWeb.AbstractClientBase.MethodInfo(GetSharedWithMeFilesResponse, function (request) {
            return request.serializeBinary();
        }, GetSharedWithMeFilesResponse.deserializeBinary);
        this.methodInfoOpenPublicFile = new grpcWeb.AbstractClientBase.MethodInfo(OpenPublicFileResponse, function (request) {
            return request.serializeBinary();
        }, OpenPublicFileResponse.deserializeBinary);
        this.methodInfoAddItems = new grpcWeb.AbstractClientBase.MethodInfo(AddItemsResponse, function (request) {
            return request.serializeBinary();
        }, AddItemsResponse.deserializeBinary);
        this.methodInfoCreateFolder = new grpcWeb.AbstractClientBase.MethodInfo(CreateFolderResponse, function (request) {
            return request.serializeBinary();
        }, CreateFolderResponse.deserializeBinary);
        this.methodInfoToggleFuseDrive = new grpcWeb.AbstractClientBase.MethodInfo(FuseDriveResponse, function (request) {
            return request.serializeBinary();
        }, FuseDriveResponse.deserializeBinary);
        this.methodInfoGetFuseDriveStatus = new grpcWeb.AbstractClientBase.MethodInfo(FuseDriveResponse, function (request) {
            return request.serializeBinary();
        }, FuseDriveResponse.deserializeBinary);
        this.methodInfoCreateBucket = new grpcWeb.AbstractClientBase.MethodInfo(CreateBucketResponse, function (request) {
            return request.serializeBinary();
        }, CreateBucketResponse.deserializeBinary);
        this.methodInfoBackupKeysByPassphrase = new grpcWeb.AbstractClientBase.MethodInfo(BackupKeysByPassphraseResponse, function (request) {
            return request.serializeBinary();
        }, BackupKeysByPassphraseResponse.deserializeBinary);
        this.methodInfoRecoverKeysByPassphrase = new grpcWeb.AbstractClientBase.MethodInfo(RecoverKeysByPassphraseResponse, function (request) {
            return request.serializeBinary();
        }, RecoverKeysByPassphraseResponse.deserializeBinary);
        this.methodInfoTestKeysPassphrase = new grpcWeb.AbstractClientBase.MethodInfo(TestKeysPassphraseResponse, function (request) {
            return request.serializeBinary();
        }, TestKeysPassphraseResponse.deserializeBinary);
        this.methodInfoCreateLocalKeysBackup = new grpcWeb.AbstractClientBase.MethodInfo(CreateLocalKeysBackupResponse, function (request) {
            return request.serializeBinary();
        }, CreateLocalKeysBackupResponse.deserializeBinary);
        this.methodInfoRecoverKeysByLocalBackup = new grpcWeb.AbstractClientBase.MethodInfo(RecoverKeysByLocalBackupResponse, function (request) {
            return request.serializeBinary();
        }, RecoverKeysByLocalBackupResponse.deserializeBinary);
        this.methodInfoShareBucket = new grpcWeb.AbstractClientBase.MethodInfo(ShareBucketResponse, function (request) {
            return request.serializeBinary();
        }, ShareBucketResponse.deserializeBinary);
        this.methodInfoJoinBucket = new grpcWeb.AbstractClientBase.MethodInfo(JoinBucketResponse, function (request) {
            return request.serializeBinary();
        }, JoinBucketResponse.deserializeBinary);
        this.methodInfoShareFilesViaPublicKey = new grpcWeb.AbstractClientBase.MethodInfo(ShareFilesViaPublicKeyResponse, function (request) {
            return request.serializeBinary();
        }, ShareFilesViaPublicKeyResponse.deserializeBinary);
        this.methodInfoHandleFilesInvitation = new grpcWeb.AbstractClientBase.MethodInfo(HandleFilesInvitationResponse, function (request) {
            return request.serializeBinary();
        }, HandleFilesInvitationResponse.deserializeBinary);
        this.methodInfoNotificationSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(NotificationEventResponse, function (request) {
            return request.serializeBinary();
        }, NotificationEventResponse.deserializeBinary);
        this.methodInfoListBuckets = new grpcWeb.AbstractClientBase.MethodInfo(ListBucketsResponse, function (request) {
            return request.serializeBinary();
        }, ListBucketsResponse.deserializeBinary);
        this.methodInfoGetNotifications = new grpcWeb.AbstractClientBase.MethodInfo(GetNotificationsResponse, function (request) {
            return request.serializeBinary();
        }, GetNotificationsResponse.deserializeBinary);
        this.methodInfoReadNotification = new grpcWeb.AbstractClientBase.MethodInfo(ReadNotificationResponse, function (request) {
            return request.serializeBinary();
        }, ReadNotificationResponse.deserializeBinary);
        this.methodInfoDeleteAccount = new grpcWeb.AbstractClientBase.MethodInfo(DeleteAccountResponse, function (request) {
            return request.serializeBinary();
        }, DeleteAccountResponse.deserializeBinary);
        this.methodInfoToggleBucketBackup = new grpcWeb.AbstractClientBase.MethodInfo(ToggleBucketBackupResponse, function (request) {
            return request.serializeBinary();
        }, ToggleBucketBackupResponse.deserializeBinary);
        this.methodInfoGetUsageInfo = new grpcWeb.AbstractClientBase.MethodInfo(GetUsageInfoResponse, function (request) {
            return request.serializeBinary();
        }, GetUsageInfoResponse.deserializeBinary);
        this.methodInfoGetAPISessionTokens = new grpcWeb.AbstractClientBase.MethodInfo(GetAPISessionTokensResponse, function (request) {
            return request.serializeBinary();
        }, GetAPISessionTokensResponse.deserializeBinary);
        this.methodInfoGetRecentlySharedWith = new grpcWeb.AbstractClientBase.MethodInfo(GetRecentlySharedWithResponse, function (request) {
            return request.serializeBinary();
        }, GetRecentlySharedWithResponse.deserializeBinary);
        this.methodInfoSetNotificationsLastSeenAt = new grpcWeb.AbstractClientBase.MethodInfo(SetNotificationsLastSeenAtResponse, function (request) {
            return request.serializeBinary();
        }, SetNotificationsLastSeenAtResponse.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    SpaceApiClient.prototype.listDirectories = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListDirectories', this.hostname_).toString(), request, metadata || {}, this.methodInfoListDirectories, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListDirectories', request, metadata || {}, this.methodInfoListDirectories);
    };
    SpaceApiClient.prototype.listDirectory = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListDirectory', this.hostname_).toString(), request, metadata || {}, this.methodInfoListDirectory, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListDirectory', request, metadata || {}, this.methodInfoListDirectory);
    };
    SpaceApiClient.prototype.generateKeyPair = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GenerateKeyPair', this.hostname_).toString(), request, metadata || {}, this.methodInfoGenerateKeyPair, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GenerateKeyPair', request, metadata || {}, this.methodInfoGenerateKeyPair);
    };
    SpaceApiClient.prototype.getStoredMnemonic = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetStoredMnemonic', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetStoredMnemonic, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetStoredMnemonic', request, metadata || {}, this.methodInfoGetStoredMnemonic);
    };
    SpaceApiClient.prototype.restoreKeyPairViaMnemonic = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/RestoreKeyPairViaMnemonic', this.hostname_).toString(), request, metadata || {}, this.methodInfoRestoreKeyPairViaMnemonic, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/RestoreKeyPairViaMnemonic', request, metadata || {}, this.methodInfoRestoreKeyPairViaMnemonic);
    };
    SpaceApiClient.prototype.deleteKeyPair = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/DeleteKeyPair', this.hostname_).toString(), request, metadata || {}, this.methodInfoDeleteKeyPair, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/DeleteKeyPair', request, metadata || {}, this.methodInfoDeleteKeyPair);
    };
    SpaceApiClient.prototype.generateKeyPairWithForce = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GenerateKeyPairWithForce', this.hostname_).toString(), request, metadata || {}, this.methodInfoGenerateKeyPairWithForce, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GenerateKeyPairWithForce', request, metadata || {}, this.methodInfoGenerateKeyPairWithForce);
    };
    SpaceApiClient.prototype.getPublicKey = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetPublicKey', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetPublicKey, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetPublicKey', request, metadata || {}, this.methodInfoGetPublicKey);
    };
    SpaceApiClient.prototype.subscribe = function (request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/Subscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoSubscribe);
    };
    SpaceApiClient.prototype.fileInfoSubscribe = function (request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/FileInfoSubscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoFileInfoSubscribe);
    };
    SpaceApiClient.prototype.txlSubscribe = function (request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/TxlSubscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoTxlSubscribe);
    };
    SpaceApiClient.prototype.openFile = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/OpenFile', this.hostname_).toString(), request, metadata || {}, this.methodInfoOpenFile, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/OpenFile', request, metadata || {}, this.methodInfoOpenFile);
    };
    SpaceApiClient.prototype.generatePublicFileLink = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GeneratePublicFileLink', this.hostname_).toString(), request, metadata || {}, this.methodInfoGeneratePublicFileLink, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GeneratePublicFileLink', request, metadata || {}, this.methodInfoGeneratePublicFileLink);
    };
    SpaceApiClient.prototype.getSharedWithMeFiles = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetSharedWithMeFiles', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetSharedWithMeFiles, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetSharedWithMeFiles', request, metadata || {}, this.methodInfoGetSharedWithMeFiles);
    };
    SpaceApiClient.prototype.openPublicFile = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/OpenPublicFile', this.hostname_).toString(), request, metadata || {}, this.methodInfoOpenPublicFile, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/OpenPublicFile', request, metadata || {}, this.methodInfoOpenPublicFile);
    };
    SpaceApiClient.prototype.addItems = function (request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/AddItems', this.hostname_).toString(), request, metadata || {}, this.methodInfoAddItems);
    };
    SpaceApiClient.prototype.createFolder = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateFolder', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateFolder, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateFolder', request, metadata || {}, this.methodInfoCreateFolder);
    };
    SpaceApiClient.prototype.toggleFuseDrive = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ToggleFuseDrive', this.hostname_).toString(), request, metadata || {}, this.methodInfoToggleFuseDrive, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ToggleFuseDrive', request, metadata || {}, this.methodInfoToggleFuseDrive);
    };
    SpaceApiClient.prototype.getFuseDriveStatus = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetFuseDriveStatus', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetFuseDriveStatus, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetFuseDriveStatus', request, metadata || {}, this.methodInfoGetFuseDriveStatus);
    };
    SpaceApiClient.prototype.createBucket = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateBucket', request, metadata || {}, this.methodInfoCreateBucket);
    };
    SpaceApiClient.prototype.backupKeysByPassphrase = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/BackupKeysByPassphrase', this.hostname_).toString(), request, metadata || {}, this.methodInfoBackupKeysByPassphrase, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/BackupKeysByPassphrase', request, metadata || {}, this.methodInfoBackupKeysByPassphrase);
    };
    SpaceApiClient.prototype.recoverKeysByPassphrase = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/RecoverKeysByPassphrase', this.hostname_).toString(), request, metadata || {}, this.methodInfoRecoverKeysByPassphrase, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/RecoverKeysByPassphrase', request, metadata || {}, this.methodInfoRecoverKeysByPassphrase);
    };
    SpaceApiClient.prototype.testKeysPassphrase = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/TestKeysPassphrase', this.hostname_).toString(), request, metadata || {}, this.methodInfoTestKeysPassphrase, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/TestKeysPassphrase', request, metadata || {}, this.methodInfoTestKeysPassphrase);
    };
    SpaceApiClient.prototype.createLocalKeysBackup = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateLocalKeysBackup', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateLocalKeysBackup, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateLocalKeysBackup', request, metadata || {}, this.methodInfoCreateLocalKeysBackup);
    };
    SpaceApiClient.prototype.recoverKeysByLocalBackup = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/RecoverKeysByLocalBackup', this.hostname_).toString(), request, metadata || {}, this.methodInfoRecoverKeysByLocalBackup, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/RecoverKeysByLocalBackup', request, metadata || {}, this.methodInfoRecoverKeysByLocalBackup);
    };
    SpaceApiClient.prototype.shareBucket = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ShareBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoShareBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ShareBucket', request, metadata || {}, this.methodInfoShareBucket);
    };
    SpaceApiClient.prototype.joinBucket = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/JoinBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoJoinBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/JoinBucket', request, metadata || {}, this.methodInfoJoinBucket);
    };
    SpaceApiClient.prototype.shareFilesViaPublicKey = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ShareFilesViaPublicKey', this.hostname_).toString(), request, metadata || {}, this.methodInfoShareFilesViaPublicKey, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ShareFilesViaPublicKey', request, metadata || {}, this.methodInfoShareFilesViaPublicKey);
    };
    SpaceApiClient.prototype.handleFilesInvitation = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/HandleFilesInvitation', this.hostname_).toString(), request, metadata || {}, this.methodInfoHandleFilesInvitation, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/HandleFilesInvitation', request, metadata || {}, this.methodInfoHandleFilesInvitation);
    };
    SpaceApiClient.prototype.notificationSubscribe = function (request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/NotificationSubscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoNotificationSubscribe);
    };
    SpaceApiClient.prototype.listBuckets = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListBuckets', this.hostname_).toString(), request, metadata || {}, this.methodInfoListBuckets, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListBuckets', request, metadata || {}, this.methodInfoListBuckets);
    };
    SpaceApiClient.prototype.getNotifications = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetNotifications', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetNotifications, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetNotifications', request, metadata || {}, this.methodInfoGetNotifications);
    };
    SpaceApiClient.prototype.readNotification = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ReadNotification', this.hostname_).toString(), request, metadata || {}, this.methodInfoReadNotification, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ReadNotification', request, metadata || {}, this.methodInfoReadNotification);
    };
    SpaceApiClient.prototype.deleteAccount = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/DeleteAccount', this.hostname_).toString(), request, metadata || {}, this.methodInfoDeleteAccount, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/DeleteAccount', request, metadata || {}, this.methodInfoDeleteAccount);
    };
    SpaceApiClient.prototype.toggleBucketBackup = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ToggleBucketBackup', this.hostname_).toString(), request, metadata || {}, this.methodInfoToggleBucketBackup, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ToggleBucketBackup', request, metadata || {}, this.methodInfoToggleBucketBackup);
    };
    SpaceApiClient.prototype.getUsageInfo = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetUsageInfo', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetUsageInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetUsageInfo', request, metadata || {}, this.methodInfoGetUsageInfo);
    };
    SpaceApiClient.prototype.getAPISessionTokens = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetAPISessionTokens', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetAPISessionTokens, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetAPISessionTokens', request, metadata || {}, this.methodInfoGetAPISessionTokens);
    };
    SpaceApiClient.prototype.getRecentlySharedWith = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetRecentlySharedWith', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetRecentlySharedWith, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetRecentlySharedWith', request, metadata || {}, this.methodInfoGetRecentlySharedWith);
    };
    SpaceApiClient.prototype.setNotificationsLastSeenAt = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/SetNotificationsLastSeenAt', this.hostname_).toString(), request, metadata || {}, this.methodInfoSetNotificationsLastSeenAt, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/SetNotificationsLastSeenAt', request, metadata || {}, this.methodInfoSetNotificationsLastSeenAt);
    };
    return SpaceApiClient;
}());
export { SpaceApiClient };
//# sourceMappingURL=SpaceServiceClientPb.js.map