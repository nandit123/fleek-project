"use strict";
/**
 * @fileoverview gRPC-Web generated client stub for space
 * @enhanceable
 * @public
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpaceApiClient = void 0;
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
const grpcWeb = __importStar(require("grpc-web"));
const space_pb_1 = require("./space_pb");
class SpaceApiClient {
    constructor(hostname, credentials, options) {
        this.methodInfoListDirectories = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ListDirectoriesResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ListDirectoriesResponse.deserializeBinary);
        this.methodInfoListDirectory = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ListDirectoryResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ListDirectoryResponse.deserializeBinary);
        this.methodInfoGenerateKeyPair = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GenerateKeyPairResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GenerateKeyPairResponse.deserializeBinary);
        this.methodInfoGetStoredMnemonic = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GetStoredMnemonicResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GetStoredMnemonicResponse.deserializeBinary);
        this.methodInfoRestoreKeyPairViaMnemonic = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.RestoreKeyPairViaMnemonicResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.RestoreKeyPairViaMnemonicResponse.deserializeBinary);
        this.methodInfoDeleteKeyPair = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.DeleteKeyPairResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.DeleteKeyPairResponse.deserializeBinary);
        this.methodInfoGenerateKeyPairWithForce = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GenerateKeyPairResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GenerateKeyPairResponse.deserializeBinary);
        this.methodInfoGetPublicKey = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GetPublicKeyResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GetPublicKeyResponse.deserializeBinary);
        this.methodInfoSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.FileEventResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.FileEventResponse.deserializeBinary);
        this.methodInfoFileInfoSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.FileInfoEventResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.FileInfoEventResponse.deserializeBinary);
        this.methodInfoTxlSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.TextileEventResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.TextileEventResponse.deserializeBinary);
        this.methodInfoOpenFile = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.OpenFileResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.OpenFileResponse.deserializeBinary);
        this.methodInfoGeneratePublicFileLink = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GeneratePublicFileLinkResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GeneratePublicFileLinkResponse.deserializeBinary);
        this.methodInfoGetSharedWithMeFiles = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GetSharedWithMeFilesResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GetSharedWithMeFilesResponse.deserializeBinary);
        this.methodInfoOpenPublicFile = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.OpenPublicFileResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.OpenPublicFileResponse.deserializeBinary);
        this.methodInfoAddItems = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.AddItemsResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.AddItemsResponse.deserializeBinary);
        this.methodInfoCreateFolder = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.CreateFolderResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.CreateFolderResponse.deserializeBinary);
        this.methodInfoToggleFuseDrive = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.FuseDriveResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.FuseDriveResponse.deserializeBinary);
        this.methodInfoGetFuseDriveStatus = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.FuseDriveResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.FuseDriveResponse.deserializeBinary);
        this.methodInfoCreateBucket = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.CreateBucketResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.CreateBucketResponse.deserializeBinary);
        this.methodInfoBackupKeysByPassphrase = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.BackupKeysByPassphraseResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.BackupKeysByPassphraseResponse.deserializeBinary);
        this.methodInfoRecoverKeysByPassphrase = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.RecoverKeysByPassphraseResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.RecoverKeysByPassphraseResponse.deserializeBinary);
        this.methodInfoTestKeysPassphrase = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.TestKeysPassphraseResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.TestKeysPassphraseResponse.deserializeBinary);
        this.methodInfoCreateLocalKeysBackup = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.CreateLocalKeysBackupResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.CreateLocalKeysBackupResponse.deserializeBinary);
        this.methodInfoRecoverKeysByLocalBackup = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.RecoverKeysByLocalBackupResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.RecoverKeysByLocalBackupResponse.deserializeBinary);
        this.methodInfoShareBucket = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ShareBucketResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ShareBucketResponse.deserializeBinary);
        this.methodInfoJoinBucket = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.JoinBucketResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.JoinBucketResponse.deserializeBinary);
        this.methodInfoShareFilesViaPublicKey = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ShareFilesViaPublicKeyResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ShareFilesViaPublicKeyResponse.deserializeBinary);
        this.methodInfoHandleFilesInvitation = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.HandleFilesInvitationResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.HandleFilesInvitationResponse.deserializeBinary);
        this.methodInfoNotificationSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.NotificationEventResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.NotificationEventResponse.deserializeBinary);
        this.methodInfoListBuckets = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ListBucketsResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ListBucketsResponse.deserializeBinary);
        this.methodInfoGetNotifications = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GetNotificationsResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GetNotificationsResponse.deserializeBinary);
        this.methodInfoReadNotification = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ReadNotificationResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ReadNotificationResponse.deserializeBinary);
        this.methodInfoDeleteAccount = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.DeleteAccountResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.DeleteAccountResponse.deserializeBinary);
        this.methodInfoToggleBucketBackup = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ToggleBucketBackupResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ToggleBucketBackupResponse.deserializeBinary);
        this.methodInfoGetUsageInfo = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GetUsageInfoResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GetUsageInfoResponse.deserializeBinary);
        this.methodInfoGetAPISessionTokens = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GetAPISessionTokensResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GetAPISessionTokensResponse.deserializeBinary);
        this.methodInfoGetRecentlySharedWith = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GetRecentlySharedWithResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GetRecentlySharedWithResponse.deserializeBinary);
        this.methodInfoSetNotificationsLastSeenAt = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.SetNotificationsLastSeenAtResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.SetNotificationsLastSeenAtResponse.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    listDirectories(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListDirectories', this.hostname_).toString(), request, metadata || {}, this.methodInfoListDirectories, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListDirectories', request, metadata || {}, this.methodInfoListDirectories);
    }
    listDirectory(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListDirectory', this.hostname_).toString(), request, metadata || {}, this.methodInfoListDirectory, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListDirectory', request, metadata || {}, this.methodInfoListDirectory);
    }
    generateKeyPair(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GenerateKeyPair', this.hostname_).toString(), request, metadata || {}, this.methodInfoGenerateKeyPair, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GenerateKeyPair', request, metadata || {}, this.methodInfoGenerateKeyPair);
    }
    getStoredMnemonic(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetStoredMnemonic', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetStoredMnemonic, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetStoredMnemonic', request, metadata || {}, this.methodInfoGetStoredMnemonic);
    }
    restoreKeyPairViaMnemonic(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/RestoreKeyPairViaMnemonic', this.hostname_).toString(), request, metadata || {}, this.methodInfoRestoreKeyPairViaMnemonic, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/RestoreKeyPairViaMnemonic', request, metadata || {}, this.methodInfoRestoreKeyPairViaMnemonic);
    }
    deleteKeyPair(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/DeleteKeyPair', this.hostname_).toString(), request, metadata || {}, this.methodInfoDeleteKeyPair, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/DeleteKeyPair', request, metadata || {}, this.methodInfoDeleteKeyPair);
    }
    generateKeyPairWithForce(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GenerateKeyPairWithForce', this.hostname_).toString(), request, metadata || {}, this.methodInfoGenerateKeyPairWithForce, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GenerateKeyPairWithForce', request, metadata || {}, this.methodInfoGenerateKeyPairWithForce);
    }
    getPublicKey(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetPublicKey', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetPublicKey, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetPublicKey', request, metadata || {}, this.methodInfoGetPublicKey);
    }
    subscribe(request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/Subscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoSubscribe);
    }
    fileInfoSubscribe(request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/FileInfoSubscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoFileInfoSubscribe);
    }
    txlSubscribe(request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/TxlSubscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoTxlSubscribe);
    }
    openFile(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/OpenFile', this.hostname_).toString(), request, metadata || {}, this.methodInfoOpenFile, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/OpenFile', request, metadata || {}, this.methodInfoOpenFile);
    }
    generatePublicFileLink(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GeneratePublicFileLink', this.hostname_).toString(), request, metadata || {}, this.methodInfoGeneratePublicFileLink, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GeneratePublicFileLink', request, metadata || {}, this.methodInfoGeneratePublicFileLink);
    }
    getSharedWithMeFiles(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetSharedWithMeFiles', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetSharedWithMeFiles, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetSharedWithMeFiles', request, metadata || {}, this.methodInfoGetSharedWithMeFiles);
    }
    openPublicFile(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/OpenPublicFile', this.hostname_).toString(), request, metadata || {}, this.methodInfoOpenPublicFile, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/OpenPublicFile', request, metadata || {}, this.methodInfoOpenPublicFile);
    }
    addItems(request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/AddItems', this.hostname_).toString(), request, metadata || {}, this.methodInfoAddItems);
    }
    createFolder(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateFolder', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateFolder, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateFolder', request, metadata || {}, this.methodInfoCreateFolder);
    }
    toggleFuseDrive(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ToggleFuseDrive', this.hostname_).toString(), request, metadata || {}, this.methodInfoToggleFuseDrive, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ToggleFuseDrive', request, metadata || {}, this.methodInfoToggleFuseDrive);
    }
    getFuseDriveStatus(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetFuseDriveStatus', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetFuseDriveStatus, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetFuseDriveStatus', request, metadata || {}, this.methodInfoGetFuseDriveStatus);
    }
    createBucket(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateBucket', request, metadata || {}, this.methodInfoCreateBucket);
    }
    backupKeysByPassphrase(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/BackupKeysByPassphrase', this.hostname_).toString(), request, metadata || {}, this.methodInfoBackupKeysByPassphrase, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/BackupKeysByPassphrase', request, metadata || {}, this.methodInfoBackupKeysByPassphrase);
    }
    recoverKeysByPassphrase(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/RecoverKeysByPassphrase', this.hostname_).toString(), request, metadata || {}, this.methodInfoRecoverKeysByPassphrase, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/RecoverKeysByPassphrase', request, metadata || {}, this.methodInfoRecoverKeysByPassphrase);
    }
    testKeysPassphrase(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/TestKeysPassphrase', this.hostname_).toString(), request, metadata || {}, this.methodInfoTestKeysPassphrase, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/TestKeysPassphrase', request, metadata || {}, this.methodInfoTestKeysPassphrase);
    }
    createLocalKeysBackup(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateLocalKeysBackup', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateLocalKeysBackup, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateLocalKeysBackup', request, metadata || {}, this.methodInfoCreateLocalKeysBackup);
    }
    recoverKeysByLocalBackup(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/RecoverKeysByLocalBackup', this.hostname_).toString(), request, metadata || {}, this.methodInfoRecoverKeysByLocalBackup, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/RecoverKeysByLocalBackup', request, metadata || {}, this.methodInfoRecoverKeysByLocalBackup);
    }
    shareBucket(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ShareBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoShareBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ShareBucket', request, metadata || {}, this.methodInfoShareBucket);
    }
    joinBucket(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/JoinBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoJoinBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/JoinBucket', request, metadata || {}, this.methodInfoJoinBucket);
    }
    shareFilesViaPublicKey(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ShareFilesViaPublicKey', this.hostname_).toString(), request, metadata || {}, this.methodInfoShareFilesViaPublicKey, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ShareFilesViaPublicKey', request, metadata || {}, this.methodInfoShareFilesViaPublicKey);
    }
    handleFilesInvitation(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/HandleFilesInvitation', this.hostname_).toString(), request, metadata || {}, this.methodInfoHandleFilesInvitation, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/HandleFilesInvitation', request, metadata || {}, this.methodInfoHandleFilesInvitation);
    }
    notificationSubscribe(request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/NotificationSubscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoNotificationSubscribe);
    }
    listBuckets(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListBuckets', this.hostname_).toString(), request, metadata || {}, this.methodInfoListBuckets, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListBuckets', request, metadata || {}, this.methodInfoListBuckets);
    }
    getNotifications(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetNotifications', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetNotifications, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetNotifications', request, metadata || {}, this.methodInfoGetNotifications);
    }
    readNotification(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ReadNotification', this.hostname_).toString(), request, metadata || {}, this.methodInfoReadNotification, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ReadNotification', request, metadata || {}, this.methodInfoReadNotification);
    }
    deleteAccount(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/DeleteAccount', this.hostname_).toString(), request, metadata || {}, this.methodInfoDeleteAccount, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/DeleteAccount', request, metadata || {}, this.methodInfoDeleteAccount);
    }
    toggleBucketBackup(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ToggleBucketBackup', this.hostname_).toString(), request, metadata || {}, this.methodInfoToggleBucketBackup, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ToggleBucketBackup', request, metadata || {}, this.methodInfoToggleBucketBackup);
    }
    getUsageInfo(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetUsageInfo', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetUsageInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetUsageInfo', request, metadata || {}, this.methodInfoGetUsageInfo);
    }
    getAPISessionTokens(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetAPISessionTokens', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetAPISessionTokens, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetAPISessionTokens', request, metadata || {}, this.methodInfoGetAPISessionTokens);
    }
    getRecentlySharedWith(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetRecentlySharedWith', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetRecentlySharedWith, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetRecentlySharedWith', request, metadata || {}, this.methodInfoGetRecentlySharedWith);
    }
    setNotificationsLastSeenAt(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/SetNotificationsLastSeenAt', this.hostname_).toString(), request, metadata || {}, this.methodInfoSetNotificationsLastSeenAt, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/SetNotificationsLastSeenAt', request, metadata || {}, this.methodInfoSetNotificationsLastSeenAt);
    }
}
exports.SpaceApiClient = SpaceApiClient;
//# sourceMappingURL=SpaceServiceClientPb.js.map